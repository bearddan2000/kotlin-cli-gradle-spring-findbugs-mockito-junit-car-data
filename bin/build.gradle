/*
    gradle clean build bootRun
*/
buildscript {
    ext {
        kotlinVersion = '1.4.32'
        springBootVersion = '2.4.4'
        jacksonVersion = '2.12.2'
    }
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath "com.github.ben-manes:gradle-versions-plugin:0.36.0"
    }
}

plugins {
  id 'com.github.ben-manes.versions' version '0.13.0' // gradle dependencyUpdates
  // we donâ€™t need to *apply* the plugin to the root project, do we?
  id 'com.github.spotbugs' version '4.7.0' apply false
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
//apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

targetCompatibility = sourceCompatibility = JavaVersion.VERSION_1_8

group = group

jar {
  version = version
  baseName = baseName
}

repositories {
  jcenter()
  mavenCentral()
}

test {
    reports {
        html.enabled = true
    }

    // Enable JUnit 5 (Gradle 4.6+).
    useJUnitPlatform()

    // Always run tests, even when nothing changed.
    //dependsOn 'cleanTest'

    // Show test results.
    testLogging {
        events "passed", "skipped", "failed"
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled true
        html.destination file("${buildDir}/reports/html/jacoco")
        xml.destination file("${buildDir}/reports/xml/jacoco")
        csv.destination file("${buildDir}/reports/csv/jacoco")
    }
}

dependencies {
  implementation "org.jetbrains.kotlin:kotlin-reflect"
  implementation "org.springframework:spring-context:5.0.1.RELEASE"

  testImplementation "org.mockito:mockito-core:3.+"
  testImplementation 'org.mockito:mockito-junit-jupiter:2.23.0'
  testImplementation "org.springframework:spring-test:5.0.1.RELEASE"
  testImplementation platform("org.junit:junit-bom:5.8.1")
  testImplementation 'org.junit.platform:junit-platform-suite'
  testImplementation 'org.junit.jupiter:junit-jupiter'

}

apply plugin: 'com.github.spotbugs'
spotbugs {
    toolVersion = '4.2.2'
    ignoreFailures = true
    reportsDir = file("$project.buildDir/reports/findbugs")
}

tasks.withType(com.github.spotbugs.snom.SpotBugsTask) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

defaultTasks "clean", "build"
